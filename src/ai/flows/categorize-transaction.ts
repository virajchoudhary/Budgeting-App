// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview This file defines a Genkit flow for categorizing transactions using AI.
 *
 * - categorizeTransaction - An async function that takes a transaction description as input and returns a suggested category.
 * - CategorizeTransactionInput - The input type for the categorizeTransaction function.
 * - CategorizeTransactionOutput - The output type for the categorizeTransaction function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CategorizeTransactionInputSchema = z.object({
  transactionDescription: z
    .string()
    .describe('The description of the transaction to categorize.'),
  userRules: z
    .string()
    .optional()
    .describe('Optional user-defined rules to aid in categorization.'),
});

export type CategorizeTransactionInput = z.infer<
  typeof CategorizeTransactionInputSchema
>;

const CategorizeTransactionOutputSchema = z.object({
  suggestedCategory: z
    .string()
    .describe('The AI-suggested category for the transaction.'),
  confidenceScore: z
    .number()
    .optional()
    .describe('Confidence score (0-1) for the suggested category.'),
});

export type CategorizeTransactionOutput = z.infer<
  typeof CategorizeTransactionOutputSchema
>;

export async function categorizeTransaction(
  input: CategorizeTransactionInput
): Promise<CategorizeTransactionOutput> {
  return categorizeTransactionFlow(input);
}

const categorizeTransactionPrompt = ai.definePrompt({
  name: 'categorizeTransactionPrompt',
  input: {schema: CategorizeTransactionInputSchema},
  output: {schema: CategorizeTransactionOutputSchema},
  prompt: `You are a personal finance expert. Given the following transaction description, suggest a category for it. Consider any user-defined rules provided.

Transaction Description: {{{transactionDescription}}}

{{#if userRules}}
User-Defined Rules: {{{userRules}}}
{{/if}}

Please provide the suggested category and a confidence score (0-1) for your suggestion. Return a valid JSON of CategorizeTransactionOutputSchema. Ensure that suggestedCategory is never null or an empty string. If you are unsure, return the "Uncategorized" category.

{
  "suggestedCategory": "string",
  "confidenceScore": number
}`,
});

const categorizeTransactionFlow = ai.defineFlow(
  {
    name: 'categorizeTransactionFlow',
    inputSchema: CategorizeTransactionInputSchema,
    outputSchema: CategorizeTransactionOutputSchema,
  },
  async input => {
    const {output} = await categorizeTransactionPrompt(input);
    return output!;
  }
);
