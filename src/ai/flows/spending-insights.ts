'use server';

/**
 * @fileOverview Generates personalized spending insights using AI.
 *
 * - generateSpendingInsights - A function that generates spending insights.
 * - GenerateSpendingInsightsInput - The input type for the generateSpendingInsights function.
 * - GenerateSpendingInsightsOutput - The return type for the generateSpendingInsights function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateSpendingInsightsInputSchema = z.object({
  transactionHistory: z
    .string()
    .describe('The transaction history of the user, as a CSV string.'),
  userRules: z
    .string()
    .optional()
    .describe('Optional user-defined rules to guide the insights generation.'),
});
export type GenerateSpendingInsightsInput = z.infer<
  typeof GenerateSpendingInsightsInputSchema
>;

const GenerateSpendingInsightsOutputSchema = z.object({
  insights: z
    .string()
    .describe('The personalized spending insights generated by the AI.'),
});
export type GenerateSpendingInsightsOutput = z.infer<
  typeof GenerateSpendingInsightsOutputSchema
>;

export async function generateSpendingInsights(
  input: GenerateSpendingInsightsInput
): Promise<GenerateSpendingInsightsOutput> {
  return generateSpendingInsightsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateSpendingInsightsPrompt',
  input: {schema: GenerateSpendingInsightsInputSchema},
  output: {schema: GenerateSpendingInsightsOutputSchema},
  prompt: `You are an AI financial advisor who analyzes spending patterns and provides personalized insights.

  Analyze the following transaction history and identify key spending trends, potential areas for savings, and any unusual or noteworthy financial activity.

  Transaction History (CSV):
  {{transactionHistory}}

  {% if userRules %}User-Defined Rules:
  {{userRules}}{% endif %}
  
  Based on this information, generate a concise and easy-to-understand summary of spending insights for the user.
  The response should be in plain text.
  Do not include any disclaimers or introductory/closing remarks.
  Example:
  "You spent a lot of money on restaurants last month. Consider cooking at home more often to save money."
  "Your income is higher than your expenses. Consider investing the difference."
  `,
});

const generateSpendingInsightsFlow = ai.defineFlow(
  {
    name: 'generateSpendingInsightsFlow',
    inputSchema: GenerateSpendingInsightsInputSchema,
    outputSchema: GenerateSpendingInsightsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
